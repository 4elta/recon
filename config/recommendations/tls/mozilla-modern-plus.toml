# https://wiki.mozilla.org/Security/Server_Side_TLS
# https://ssl-config.mozilla.org/guidelines/5.7.json

# https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102/BSI-TR-02102-2.html
# https://csrc.nist.gov/publications/detail/sp/800-52/rev-2/final

protocol_versions = [ "TLS 1.3" ]

preference = "client"

cipher_suites = [
  "TLS_AES_128_GCM_SHA256",
  "TLS_AES_256_GCM_SHA384",
  "TLS_CHACHA20_POLY1305_SHA256",
]

[key_exchange]
methods = { ECDH = 250 }
# some versions of OpenSSL report a key length of 253 bits for Ed25519 keys (instead of the correct 256 bits).
# see https://github.com/openssl/openssl/issues/19070 regarding key length of Ed25519
# therefore, we use the BSI recommendation of "at least 250 bits"

groups = [ "x25519", "prime256v1", "secp384r1" ]

[extensions]

yes = [
  "renegotiation_info",
  "server_name",
  "extended_master_secret",
  "signature_algorithms_cert",
  "status_request",
]
no = [
  "truncated_hmac",
  "heartbeat",
  "client_certificate_url",
  "early_data", # https://blog.trailofbits.com/2019/03/25/what-application-developers-need-to-know-about-tls-early-data-0rtt/
]

[certificate]

signature_algorithms = [
  "ecdsa-with-SHA256",
  "ecdsa-with-SHA384",
  "ecdsa-with-SHA515",
]

lifespan = 90

  [certificate.public_key]
  types = { ECDSA = 250 }
  curves = [ "prime256v1", "secp384r1" ]
