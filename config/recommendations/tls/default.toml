# https://wiki.mozilla.org/Security/Server_Side_TLS
# https://ssl-config.mozilla.org/guidelines/5.7.json

protocol_versions = [ "TLS 1.2", "TLS 1.3" ]

preference = "client"

[cipher_suites]

'*' = [
  "TLS_AES_128_GCM_SHA256",
  "TLS_AES_256_GCM_SHA384",
  "TLS_CHACHA20_POLY1305_SHA256",
  "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
  "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
  "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
  "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
  "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
  "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256",
  "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
  "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
  "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
]

[key_exchange]
methods = { DH = 2048, ECDH = 250 }
# some versions of OpenSSL report a key length of 253 bits for Ed25519 keys (instead of the correct 256 bits).
# see https://github.com/openssl/openssl/issues/19070 regarding key length of Ed25519
# therefore, we use the BSI recommendation of "at least 250 bits"

groups = [ "x25519", "prime256v1", "secp384r1" ]

[extensions]
yes = [
  "status_request"
]

[certificate]

signature_algorithms = [
  "sha256WithRSAEncryption",
  "ecdsa-with-SHA256",
  "ecdsa-with-SHA384",
  "ecdsa-with-SHA515"
]

lifespan = 366

  [certificate.public_key]
  types = { RSA = 2048, ECDSA = 250 }
  curves = [ "prime256v1", "secp384r1" ]
